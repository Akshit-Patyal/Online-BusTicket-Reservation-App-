{"ast":null,"code":"function ___$insertStyle(css) {\n  if (!css) {\n    return;\n  }\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTooltip from 'react-tooltip';\n\n___$insertStyle(\".blank {\\n  height: 28px;\\n  width: 28px;\\n}\\n\\n.loader {\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  background: rgba(240, 240, 240, 0.9);\\n  z-index: \\\"2\\\";\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.seat {\\n  background-color: #4FC3F7;\\n  height: 28px;\\n  width: 28px;\\n  color: #fff;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.seat__number {\\n  font-size: 10px;\\n}\\n.seat--north {\\n  border-top-left-radius: 8px;\\n  border-top-right-radius: 8px;\\n}\\n.seat--south {\\n  border-bottom-left-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.seat--east {\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n.seat--west {\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.seat--enabled {\\n  cursor: pointer;\\n}\\n.seat--enabled:hover {\\n  background-color: #03A9F4;\\n}\\n.seat--selected {\\n  cursor: pointer;\\n  background-color: #4CAF50;\\n}\\n.seat--reserved {\\n  cursor: not-allowed;\\n  background-color: #E0E0E0;\\n}\\n\\n.seat-content {\\n  position: relative;\\n  overflow: hidden;\\n  margin: 0 auto;\\n}\\n\\n.seat-picker {\\n  display: flex;\\n  flex-direction: column;\\n  text-align: center;\\n  justify-content: center;\\n  align-items: center;\\n  width: max-content;\\n}\\n.seat-picker > *:not(:last-child) {\\n  margin-bottom: 2px;\\n}\\n.seat-picker__row {\\n  display: flex;\\n  align-items: center;\\n  justify-items: center;\\n}\\n.seat-picker__row > *:not(:last-child) {\\n  margin-right: 2px;\\n}\\n.seat-picker__row__number {\\n  font-weight: normal;\\n  height: 28px;\\n  width: 28px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n  color: #9E9E9E;\\n}\\n.seat-picker__row--enabled:hover {\\n  background-color: #F5F5F5;\\n}\\n.seat-picker__row--selected {\\n  background-color: #F5F5F5;\\n}\\n.seat-picker__row--enabled:hover > .seat-picker__row__number {\\n  font-weight: 600;\\n}\\n.seat-picker__row--selected > .seat-picker__row__number {\\n  font-weight: 600;\\n}\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nvar RowNumber = /*#__PURE__*/function (_Component) {\n  _inherits(RowNumber, _Component);\n\n  function RowNumber() {\n    _classCallCheck(this, RowNumber);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RowNumber).apply(this, arguments));\n  }\n\n  _createClass(RowNumber, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.visible ? React.createElement(\"div\", {\n        className: \"seat-picker__row__number\"\n      }, this.props.rowNumber) : null;\n    }\n  }]);\n\n  return RowNumber;\n}(Component);\n\n_defineProperty(RowNumber, \"propTypes\", {\n  rowNumber: PropTypes.string,\n  visible: PropTypes.bool\n});\n\nvar Row = /*#__PURE__*/function (_Component) {\n  _inherits(Row, _Component);\n\n  function Row() {\n    _classCallCheck(this, Row);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Row).apply(this, arguments));\n  }\n\n  _createClass(Row, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          rowNumber = _this$props.rowNumber,\n          isSelected = _this$props.isSelected;\n      var className = \"seat-picker__row\" + (isSelected ? \" seat-picker__row--selected\" : \" seat-picker__row--enabled\");\n      return React.createElement(\"div\", {\n        className: className\n      }, React.createElement(RowNumber, {\n        rowNumber: rowNumber,\n        visible: visible\n      }), this.props.children);\n    }\n  }]);\n\n  return Row;\n}(Component);\n\n_defineProperty(Row, \"propTypes\", {\n  rowNumber: PropTypes.string,\n  visible: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  children: PropTypes.array\n});\n\nvar Seat = /*#__PURE__*/function (_Component) {\n  _inherits(Seat, _Component);\n\n  function Seat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Seat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Seat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {\n      !_this.props.isReserved && _this.props.selectSeat();\n    });\n\n    return _this;\n  }\n\n  _createClass(Seat, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isSelected = _this$props.isSelected,\n          tooltip = _this$props.tooltip,\n          isEnabled = _this$props.isEnabled,\n          isReserved = _this$props.isReserved,\n          orientation = _this$props.orientation;\n      var className = \"seat\" + (isSelected ? \" seat--selected\" : \"\") + (!isSelected && isEnabled && !isReserved ? \" seat--enabled\" : \"\") + (isReserved ? \" seat--reserved\" : \"\") + \" seat--\".concat(!orientation ? \"north\" : orientation);\n      return React.createElement(\"div\", {\n        \"data-tip\": tooltip,\n        className: className,\n        onClick: this.handleClick\n      }, tooltip ? React.createElement(ReactTooltip, this.props.tooltipProps) : null, React.createElement(\"span\", {\n        className: \"seat__number\"\n      }, this.props.seatNumber));\n    }\n  }]);\n\n  return Seat;\n}(Component);\n\n_defineProperty(Seat, \"defaultProps\", {\n  isSelected: false\n});\n\nSeat.propTypes = {\n  isSelected: PropTypes.bool,\n  isReserved: PropTypes.bool,\n  tooltip: PropTypes.string,\n  isEnabled: PropTypes.bool,\n  orientation: PropTypes.oneOf([\"north\", \"south\", \"east\", \"west\"]),\n  seatNumber: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  selectSeat: PropTypes.func.isRequired,\n  tooltipProps: PropTypes.object\n};\n\nvar Blank = /*#__PURE__*/function (_Component) {\n  _inherits(Blank, _Component);\n\n  function Blank() {\n    _classCallCheck(this, Blank);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Blank).apply(this, arguments));\n  }\n\n  _createClass(Blank, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"blank\"\n      });\n    }\n  }]);\n\n  return Blank;\n}(Component);\n\nvar SeatPicker = /*#__PURE__*/function (_Component) {\n  _inherits(SeatPicker, _Component);\n\n  function SeatPicker(props) {\n    var _this;\n\n    _classCallCheck(this, SeatPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SeatPicker).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getAlreadySelectedSeats\", function () {\n      var selectedSeats = {};\n      var size = 0;\n      var _this$props = _this.props,\n          maxReservableSeats = _this$props.maxReservableSeats,\n          alpha = _this$props.alpha,\n          selectedByDefault = _this$props.selectedByDefault;\n\n      if (selectedByDefault) {\n        _this.props.rows.forEach(function (row, index) {\n          var rowNumber = alpha ? String.fromCharCode(\"A\".charCodeAt(0) + index) : (index + 1).toString();\n          row.forEach(function (seat, index) {\n            if (seat && seat.isSelected) {\n              var seatAlreadySelected = _this.includeSeat(selectedSeats, rowNumber, seat.number);\n\n              if (size < maxReservableSeats && !seatAlreadySelected) {\n                selectedSeats = _this.addSeat(selectedSeats, rowNumber, seat.number, seat.id);\n                size = size + 1;\n              }\n            }\n          });\n        });\n      }\n\n      return {\n        selectedSeats: selectedSeats,\n        size: size\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"includeSeat\", function (selectedSeats, row, number) {\n      if (selectedSeats[row]) {\n        return !!selectedSeats[row][number];\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addSeat\", function (selectedSeats, row, number, id) {\n      if (selectedSeats[row]) {\n        if (!selectedSeats[row][number]) {\n          selectedSeats[row][number] = id;\n        }\n      } else {\n        selectedSeats[row] = {};\n        selectedSeats[row][number] = id;\n      }\n\n      return _objectSpread2({}, selectedSeats);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteSeat\", function (row, number) {\n      var selectedSeats = _this.state.selectedSeats;\n\n      if (selectedSeats[row]) {\n        delete selectedSeats[row][number];\n\n        if (!Object.keys(selectedSeats[row]).length > 0) {\n          delete selectedSeats[row];\n        }\n      }\n\n      return _objectSpread2({}, selectedSeats);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addTooltip\", function (tooltipOverrides, row, number, tooltip) {\n      if (!tooltipOverrides[row]) {\n        tooltipOverrides[row] = {};\n      }\n\n      tooltipOverrides[row][number] = tooltip;\n      return _objectSpread2({}, tooltipOverrides);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"acceptSelection\", function (row, number, id, tooltip) {\n      var _this$state = _this.state,\n          selectedSeats = _this$state.selectedSeats,\n          tooltipOverrides = _this$state.tooltipOverrides,\n          size = _this$state.size;\n      var maxReservableSeats = _this.props.maxReservableSeats;\n\n      if (size < maxReservableSeats) {\n        _this.setState({\n          tooltipOverrides: _this.addTooltip(tooltipOverrides, row, number, tooltip),\n          selectedSeats: _this.addSeat(selectedSeats, row, number, id),\n          size: size + 1\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"acceptDeselection\", function (row, number, tooltip) {\n      var _this$state2 = _this.state,\n          size = _this$state2.size,\n          tooltipOverrides = _this$state2.tooltipOverrides;\n\n      _this.setState({\n        tooltipOverrides: _this.addTooltip(tooltipOverrides, row, number, tooltip),\n        selectedSeats: _this.deleteSeat(row, number),\n        size: size - 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectSeat\", function (row, number, id) {\n      var selectedSeats = _this.state.selectedSeats;\n      var size = _this.state.size;\n      var _this$props2 = _this.props,\n          maxReservableSeats = _this$props2.maxReservableSeats,\n          addSeatCallback = _this$props2.addSeatCallback,\n          removeSeatCallback = _this$props2.removeSeatCallback,\n          continuous = _this$props2.continuous;\n\n      var seatAlreadySelected = _this.includeSeat(selectedSeats, row, number);\n\n      if (seatAlreadySelected) {\n        removeSeatCallback({\n          row: row,\n          number: number,\n          id: id\n        }, _this.acceptDeselection);\n      } else {\n        if (size < maxReservableSeats) {\n          addSeatCallback({\n            row: row,\n            number: number,\n            id: id\n          }, _this.acceptSelection);\n        } else if (continuous) {\n          var auxRow = Object.keys(selectedSeats)[0];\n          var auxNumber = Object.keys(selectedSeats[auxRow])[0];\n          addSeatCallback({\n            row: row,\n            number: number,\n            id: id\n          }, _this.acceptSelection, {\n            row: auxRow,\n            number: auxNumber,\n            id: selectedSeats[auxRow][auxNumber]\n          }, _this.acceptDeselection);\n        }\n      }\n    });\n\n    var rows = props.rows;\n\n    var _this$getAlreadySelec = _this.getAlreadySelectedSeats(),\n        _selectedSeats = _this$getAlreadySelec.selectedSeats,\n        _size = _this$getAlreadySelec.size;\n\n    _this.state = {\n      tooltipOverrides: {},\n      selectedSeats: _selectedSeats,\n      size: _size,\n      rowLength: Math.max.apply(null, rows.map(function (row) {\n        return row.length;\n      }))\n    };\n    return _this;\n  }\n\n  _createClass(SeatPicker, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextState.selectedSeats !== this.state.selectedSeats || this.props.loading !== nextProps.loading;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"seat-content\"\n      }, React.createElement(\"div\", {\n        className: this.props.loading ? \"loader\" : null\n      }), React.createElement(\"div\", {\n        className: \"seat-picker\"\n      }, this.renderRows()));\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this2 = this;\n\n      var seats = this.state.selectedSeats;\n      var _this$props3 = this.props,\n          alpha = _this$props3.alpha,\n          visible = _this$props3.visible;\n      return this.props.rows.map(function (row, index) {\n        var rowNumber = alpha ? String.fromCharCode(\"A\".charCodeAt(0) + index) : (index + 1).toString();\n        var isSelected = !!seats[rowNumber];\n        var props = {\n          visible: visible,\n          rowNumber: rowNumber,\n          isSelected: isSelected,\n          selectedSeat: null,\n          seats: row,\n          // key: `Row${rowNumber}`,\n          selectSeat: _this2.selectSeat\n        };\n        return React.createElement(Row, _extends({\n          key: index\n        }, props), _this2.renderSeats(row, rowNumber, isSelected), \" \");\n      });\n    }\n  }, {\n    key: \"renderSeats\",\n    value: function renderSeats(seats, rowNumber, isRowSelected) {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          selectedSeats = _this$state3.selectedSeats,\n          size = _this$state3.size,\n          rowLength = _this$state3.rowLength,\n          tooltipOverrides = _this$state3.tooltipOverrides;\n      var _this$props4 = this.props,\n          maxReservableSeats = _this$props4.maxReservableSeats,\n          continuous = _this$props4.continuous;\n      var blanks = new Array(rowLength - seats.length > 0 ? rowLength - seats.length : 0).fill(0);\n      var row = seats.map(function (seat, index) {\n        if (seat === null) return React.createElement(Blank, {\n          key: index\n        });\n\n        var isSelected = isRowSelected && _this3.includeSeat(selectedSeats, rowNumber, seat.number);\n\n        var tooltip = seat.tooltip;\n\n        if (tooltipOverrides[rowNumber] && tooltipOverrides[rowNumber][seat.number] != null) {\n          tooltip = tooltipOverrides[rowNumber][seat.number];\n        }\n\n        var props = {\n          isSelected: isSelected,\n          orientation: seat.orientation,\n          isReserved: seat.isReserved,\n          tooltip: tooltip,\n          isEnabled: size < maxReservableSeats || continuous,\n          selectSeat: _this3.selectSeat.bind(_this3, rowNumber, seat.number, seat.id),\n          seatNumber: seat.number,\n          tooltipProps: _this3.props.tooltipProps\n        };\n        return React.createElement(Seat, _extends({\n          key: index\n        }, props));\n      });\n\n      if (blanks.length > 0) {\n        blanks.forEach(function (blank, index) {\n          row.push(React.createElement(Blank, {\n            key: row.length + index + 1\n          }));\n        });\n      }\n\n      return row;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.maxReservableSeats < state.size) {\n        var sum = 0;\n        var selectedSeats = {};\n\n        for (var array in state.selectedSeats) {\n          if (sum + state.selectedSeats[array].length < props.maxReservableSeats) {\n            selectedSeats[array] = state.selectedSeats[array].slice(0);\n          } else {\n            var dif = props.maxReservableSeats - sum;\n            selectedSeats[array] = state.selectedSeats[array].slice(0, dif);\n            return {\n              selectedSeats: selectedSeats,\n              size: props.maxReservableSeats\n            };\n          }\n\n          sum = sum + state.selectedSeats[array].length;\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return SeatPicker;\n}(Component);\n\n_defineProperty(SeatPicker, \"defaultProps\", {\n  addSeatCallback: function addSeatCallback(_ref, addCb) {\n    var row = _ref.row,\n        number = _ref.number,\n        id = _ref.id;\n    console.log(\"Added seat \".concat(number, \", row \").concat(row, \", id \").concat(id));\n    addCb(row, number, id);\n  },\n  removeSeatCallback: function removeSeatCallback(_ref2, removeCb) {\n    var row = _ref2.row,\n        number = _ref2.number,\n        id = _ref2.id;\n    console.log(\"Removed seat \".concat(number, \", row \").concat(row, \", id \").concat(id));\n    removeCb(row, number);\n  },\n  maxReservableSeats: 0\n});\n\nSeatPicker.propTypes = {\n  addSeatCallback: PropTypes.func,\n  alpha: PropTypes.bool,\n  visible: PropTypes.bool,\n  continuous: PropTypes.bool,\n  selectedByDefault: PropTypes.bool,\n  removeSeatCallback: PropTypes.func,\n  maxReservableSeats: PropTypes.number,\n  rows: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    isReserved: PropTypes.bool,\n    tooltip: PropTypes.string,\n    isSelected: PropTypes.bool\n  }))).isRequired,\n  tooltipProps: PropTypes.object,\n  loading: PropTypes.bool\n};\nexport default SeatPicker;","map":null,"metadata":{},"sourceType":"module"}